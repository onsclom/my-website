---
import Layout from "../Layout.astro";

import { getCollection } from "astro:content";

const posts = await getCollection("posts");

const socialMedia = [
  {
    name: "X",
    url: "https://twitter.com/onsclom",
  },
  {
    name: "YouTube",
    url: "https://www.youtube.com/@AustinMerrick",
  },
  {
    name: "GitHub",
    url: "https://github.com/onsclom",
  },
  {
    name: "Chess",
    url: "https://www.chess.com/member/onsclom",
  },
];

const projects = [
  {
    name: "üß© Holy Matri(x)mony",
    url: "https://cegexe.itch.io/holymatrixmony",
    description: "Finalist in GMTK 2021",
  },
  {
    name: "üìù Animated Text Editor",
    url: "https://canvas-text-editor.vercel.app",
    description: "Animation experiment",
  },
  {
    name: "‚≠ïÔ∏è Circle Clock",
    url: "https://circle-clock.vercel.app/",
    description: "Minimalist browser game",
  },
];
---

<Layout>
  <style is:global is:inline>
    .date {
      font-weight: 300;
    }

    .social-media {
      a + a {
        margin-left: 0.5rem;
      }
    }
  </style>

  <main>
    <h1>
      üëã Hi, I'm <span style="white-space: nowrap">Austin Merrick</span>
    </h1>
    <p class="social-media">
      {socialMedia.map((item) => <a href={item.url}>{item.name}</a>)}
    </p>

    <p>Welcome to my üè† on the internet!</p>

    <h2>üë® About me</h2>
    <p>
      I enjoy programming and making things. Sometimes I just want to program
      for the sake of programming, so I build useless stuff like <a
        href="https://github.com/onsclom/ts-json-parser"
        >this TypeScript JSON parser</a
      >. Other times I just want to make something useful, so I build stuff like

      <a href="https://bill-splitter.onsclom.net">
        this tool for splitting bills with friends</a
      >.
    </p>

    <h2>üõ†Ô∏è Projects</h2>

    {
      projects.map((project) => (
        <p>
          <a href={project.url}>{project.name}</a> {project.description}
        </p>
      ))
    }

    <p>
      <a href="/projects">More projects...</a>
    </p>
    <h2>‚úçÔ∏è Writing</h2>

    {
      posts
        .sort(
          (a, b) =>
            new Date(b.data.pubDate).getTime() -
            new Date(a.data.pubDate).getTime()
        )
        .map((post) => (
          <p>
            <span class="date">
              {new Date(post.data.pubDate).toLocaleDateString("en-US", {
                year: "numeric",
                month: "short",
                day: "numeric",
              })}
            </span>
            <a href={`/posts/${post.slug}`}>{post.data.title}</a>
          </p>
        ))
        .slice(0, 3)
    }
    <p>
      <a href="/posts">More writing...</a>
    </p>
  </main>
</Layout>
